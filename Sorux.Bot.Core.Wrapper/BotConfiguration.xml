<?xml version="1.0" encoding="utf-8" ?>
<BotConfiguration>
  <WebLister>
    <!--这个节点用于配置 Web 服务-->
    <!--填写 gRPC 服务建立的地址-->
    <WebListenerUrl>localhost</WebListenerUrl>
    <!--填写 gRPC 服务的端口地址-->
    <WebListenerPort>7151</WebListenerPort>
  </WebLister>
  <LongCommunicateFunction>
    <!--这个节点用于配置长对话模块的设置-->
    <!--可以为 Enable 或者是 Disable ，表示启用或者不启用；若不启用那么插件使用长对话功能时可能出现无法预知的后果-->
    <State>Enable</State>
    <!--可以为 Enable 或者是 Disable ，表示检测到所有插件未在初始注册时请求长对话功能即自动关闭长对话监听模块-->
    <!--若插件未请求服务即使用长对话模块可能会导致框架关闭而插件无法使用，同时可能与热重载等模式冲突-->
    <AutoDisable>Enable</AutoDisable>
    <!--可以为任意正整数，最高不能超过 2147483647，单位为秒-->
    <!--本设置项是为规范某些插件作者开发不规范导致的长对话线程泄露，表示最长等待时间，超时将会直接终止长对话请求-->
    <DefaultTimeOutLimit>60</DefaultTimeOutLimit>
  </LongCommunicateFunction>
  <PermissionSystem>
    <!--这个节点用于配置插件的权限系统-->
    <!--可以为 Enable 或者是 Disable ,表示是否启用权限系统，若不启用那么插件使用权限系统时可能出现无法预知的后果-->
    <State>Enable</State>
  </PermissionSystem>
  <RuntimeAdapter>
    <!--这个节点配置项在初始化时仅提供给SoruxFramework本身，用于组装适配器-->
    <!--如果你需要配置低配置项(即针对于特定的操作系统平台，亦或是会会影响组件，请使用Runtime配置项)-->
    <!--$BotFramework被标记为变量，其指向框架的内置实现-->
    <!--$NULL被标记为变量，其指向的是空类型，但是我们不确保提供空类型的组件会使得组装后的框架正常运转
        如框架无法离开消息队列组件而正常工作。在不提供具体实现但是可能不会导致出现异常的子配置节点我们会
        添加Nullable的注释，但是这并不意味着他不会出现异常。我们推荐你在开发的时候启动$None节点而减少mock成本-->
    <!--$LocalRunPath为变量，其指向的是机器人的运行目录，即框架Wrapper编译后所在的目录-->
    <!--BotFramework认为你提供的路径具有平台适配性，即框架不会根据平台修改你的路径，请自行确定在不同操作系统下路径的斜线与反斜线的具体语境-->
    <MessageQueue>
      <Path>$BotFramework</Path>
      <Namespace>MessageQueue.MqChannelWrapper</Namespace>
    </MessageQueue>
    <ResponseQueue>
      <Path>$BotFramework</Path>
      <Namespace>MessageQueue.ResponseChannelWrapper</Namespace>
    </ResponseQueue>
    <PluginsDataStorage>
      <!--Nullable-->
      <Path>$BotFramework</Path>
      <Namespace>DataStorage.PluginsDataStorage</Namespace>
    </PluginsDataStorage>
    <PluginsStoragePermanent>
      <!--Nullable-->
      <Path>$LocalRunPath\ExtensionsLibs\PluginsStoragePermanent</Path>
      <Namespace>$None</Namespace>
    </PluginsStoragePermanent>
  </RuntimeAdapter>
  <LoggerConfig>
    <!--这个节点配置框架是否输出Log日志，如果输出，那么会在程序运行目录下的Logs文件夹内以天为单位输出日志-->
    <CreateFiles>True</CreateFiles>
  </LoggerConfig>
  <PluginsDispatcher>
    <!--这个节点配置框架分发插件的具体细节-->
    <PrivilegeSchedule>
      <!--这个节点配置优先级冲突时的处理方式-->
      <!--可为Lower或者是Upper，默认Lower。表示当插件加载时若发生了优先级相同的冲突，那么会将晚加载的插件优先级"向后或者向前"调动以避免冲突-->
      <PushStandard>Lower</PushStandard>
      <!--可为Enable或者是Disable，默认为Disable，表示当插件加载时若发生了优先级相同的冲突，"会或者不会"自动修改插件的优先级配置文件，以避免下一次加载也会发生冲突-->
      <ConflictSolvePersistence>Disable</ConflictSolvePersistence>
      <!--实验性功能，仅在Version:1.1.0-Beta以上有效-->
      <!--可为Enable或者是Disable，默认为Disable，表示插件"是否"允许相同优先级的存在。若启用本项，上面两项配置失效。-->
      <!--注意：若开启，无法预测优先级相同的插件的具体执行顺序！！！-->
      <EnableMutipliedPrivilege>Disable</EnableMutipliedPrivilege>
    </PrivilegeSchedule>
    <!--可为正整数，单位为秒，表示一次消息最多被处理的时间，如果超时即停止这个消息的后续处理-->
    <!--一次消息的处理往往只包括全部的通用消息处理和某个插件的某个或几个Action，因此出现控制台警报时请检查某个插件是否出现了问题-->
    <DefaultPluginResponseLimit>60</DefaultPluginResponseLimit>
  </PluginsDispatcher>
  <ProviderConfig>
    <!--这个节点用于配置 Provider 的设置-->
    <ProviderItem>
      <!--这个节点表示一般性节点，代表一个 Provider 的配置项-->
      <!--表示平台标识，同一个平台只允许使用一个 Provider-->
      <Platform>qq</Platform>
      <!--表示框架的API请求地址，框架以 HttpPost 的方式发送信息，本地址应该是基于 SoruxBot Framework 规范开发的 Provider-->
      <HttpPostJsonPath>http://localhost:5701</HttpPostJsonPath>
      <!--表示特定平台的 Future Test 事件和功能，本地址应该是协议层的直接地址-->
      <NetWorkHttpPostPath>http://localhost:5700</NetWorkHttpPostPath>
    </ProviderItem>
  </ProviderConfig>
  <CommunicateTrigger>
    <!--这个节点用于配置触发条件-->
    <!--可为 Enable 或者 Disable 用于表示是否启用消息前缀触发-->
    <State>Enable</State>
    <!--可为任意英文字母，特殊符号，但不可为 @ 。-->
    <TriggerChar>#</TriggerChar>
  </CommunicateTrigger>
  <MultipliedThread>
    <!--这个节点用于配置框架多线程的相关信息，注意：长对话支持的插件不受本配置节点的影响-->
    <!--可为 Enable 或者 Disable 用于表示是否启用多线程-->
    <State>Enable</State>
  </MultipliedThread>
  <QueueShutdownSafety>
    <!--这个节点用于配置消息队列的安全性问题-->
    <!--可为True 或者 False 是否接受其他程序使用框架的消息队列-->
    <AccecptThirdPartyQueue>True</AccecptThirdPartyQueue>
    <!--可为 True 或者 False 是否在异常情况时候自动存储未处理的消息队列，这些消息会在机器人重启后继续处理-->
    <AutoSaveUnDealWithQueue>True</AutoSaveUnDealWithQueue>
  </QueueShutdownSafety>
  <FrameworkQuickStart>
    <!--这个节点用于配置框架快速启动的相关设置-->
    <!--可为Enable或者Disable 表示是否启用-->
    <State>Enable</State>
    <!--可为 True 或者 False 表示是否允许热重载插件【可能导致未知后果】-->
    <MemoryRestartPlugins>False</MemoryRestartPlugins>
    <!--可为 True 或者 False 表示是否允许将临时文件存储在磁盘以方便快速启动【可能导致未知后果】-->
    <StoreTempData>False</StoreTempData>
  </FrameworkQuickStart>
  <TestFuction>
    <!--实验性功能 【该节点的所有功能均可能导致未知的后果】-->
    <!--可为 True 或者 False 表示是否以更快的方式加载和扫描插件信息-->
    <FasterPluginsLoad>False</FasterPluginsLoad>
  </TestFuction>
</BotConfiguration>
